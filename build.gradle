plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
}
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
mainClassName = "com.mirf.Main"

libsDirName = "$project.projectDir/out"

sourceCompatibility = 16

// jar {
//     manifest {
//         attributes 'Implementation-Title': 'med_sample',
//                 'Implementation-Version': version,
//                 'Main-Class': 'com.mirf.Main'
//     }

//     from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
// }

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    testImplementation group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testImplementation group: 'junit', name: 'junit-dep', version: '4.11'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '1.9.+'
    implementation 'com.github.micheljung:nocatch:1.1'
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation fileTree(dir: 'libs/itext', include: '*.jar')
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.5.31"
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    implementation group: 'org.tensorflow', name: 'tensorflow', version: '1.15.0'
    implementation group: 'org.tensorflow', name: 'libtensorflow', version: '1.15.0'
    implementation group: 'org.jfree', name: 'jfreechart', version: '1.0.19'
    implementation group: 'commons-io', name: 'commons-io', version: '2.5'
}

distributions {

}

//task showMeCache {
//    configurations.runtimeClasspath.each { println it }
//    println libsDirName
//}

compileKotlin {
    kotlinOptions {
        jvmTarget = "16"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "16"
    }
}

if(JavaVersion.current() != JavaVersion.VERSION_16){
    throw new GradleException("This build must be run with java 16")
}
